
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000d6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000014a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000045  00800060  00800060  0000014a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000014a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000017c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  000001b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000005eb  00000000  00000000  000001e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000532  00000000  00000000  000007cb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000018c  00000000  00000000  00000cfd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000034  00000000  00000000  00000e8c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000324  00000000  00000000  00000ec0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  000011e4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a5 3a       	cpi	r26, 0xA5	; 165
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 66 00 	call	0xcc	; 0xcc <main>
  74:	0c 94 69 00 	jmp	0xd2	; 0xd2 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <average>:
int sum;
char adc;

void average()
{
	sum=sum+(adc-arr[ix]);
  7c:	40 91 a2 00 	lds	r20, 0x00A2	; 0x8000a2 <adc>
  80:	20 91 a3 00 	lds	r18, 0x00A3	; 0x8000a3 <ix>
  84:	30 91 a4 00 	lds	r19, 0x00A4	; 0x8000a4 <ix+0x1>
  88:	84 2f       	mov	r24, r20
  8a:	90 e0       	ldi	r25, 0x00	; 0
  8c:	f9 01       	movw	r30, r18
  8e:	e0 5a       	subi	r30, 0xA0	; 160
  90:	ff 4f       	sbci	r31, 0xFF	; 255
  92:	50 81       	ld	r21, Z
  94:	85 1b       	sub	r24, r21
  96:	91 09       	sbc	r25, r1
  98:	60 91 a0 00 	lds	r22, 0x00A0	; 0x8000a0 <sum>
  9c:	70 91 a1 00 	lds	r23, 0x00A1	; 0x8000a1 <sum+0x1>
  a0:	86 0f       	add	r24, r22
  a2:	97 1f       	adc	r25, r23
  a4:	90 93 a1 00 	sts	0x00A1, r25	; 0x8000a1 <sum+0x1>
  a8:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <sum>
	arr[ix]=adc;
  ac:	40 83       	st	Z, r20
	ix=ix+1;
  ae:	2f 5f       	subi	r18, 0xFF	; 255
  b0:	3f 4f       	sbci	r19, 0xFF	; 255
	
	if(ix>63)
  b2:	20 34       	cpi	r18, 0x40	; 64
  b4:	31 05       	cpc	r19, r1
  b6:	2c f4       	brge	.+10     	; 0xc2 <average+0x46>

void average()
{
	sum=sum+(adc-arr[ix]);
	arr[ix]=adc;
	ix=ix+1;
  b8:	30 93 a4 00 	sts	0x00A4, r19	; 0x8000a4 <ix+0x1>
  bc:	20 93 a3 00 	sts	0x00A3, r18	; 0x8000a3 <ix>
  c0:	08 95       	ret
	
	if(ix>63)
	{
		ix=0;
  c2:	10 92 a4 00 	sts	0x00A4, r1	; 0x8000a4 <ix+0x1>
  c6:	10 92 a3 00 	sts	0x00A3, r1	; 0x8000a3 <ix>
  ca:	08 95       	ret

000000cc <main>:

int main(void)
{
    while (1)
    {
		average();
  cc:	0e 94 3e 00 	call	0x7c	; 0x7c <average>
  d0:	fd cf       	rjmp	.-6      	; 0xcc <main>

000000d2 <_exit>:
  d2:	f8 94       	cli

000000d4 <__stop_program>:
  d4:	ff cf       	rjmp	.-2      	; 0xd4 <__stop_program>
